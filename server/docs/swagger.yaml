basePath: /v1
definitions:
  pgtype.InfinityModifier:
    enum:
    - 1
    - 0
    - -1
    type: integer
    x-enum-varnames:
    - Infinity
    - Finite
    - NegativeInfinity
  pgtype.Text:
    properties:
      string:
        type: string
      valid:
        type: boolean
    type: object
  pgtype.Timestamptz:
    properties:
      infinityModifier:
        $ref: '#/definitions/pgtype.InfinityModifier'
      time:
        type: string
      valid:
        type: boolean
    type: object
  queries.Account:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  queries.Card:
    properties:
      art:
        type: string
      id:
        type: integer
      suit:
        $ref: '#/definitions/queries.Cardsuit'
      value:
        $ref: '#/definitions/queries.Cardvalue'
    type: object
  queries.Cardstate:
    enum:
    - Deck
    - Hand
    - Play
    - Kitty
    type: string
    x-enum-varnames:
    - CardstateDeck
    - CardstateHand
    - CardstatePlay
    - CardstateKitty
  queries.Cardsuit:
    enum:
    - Spades
    - Clubs
    - Hearts
    - Diamonds
    type: string
    x-enum-varnames:
    - CardsuitSpades
    - CardsuitClubs
    - CardsuitHearts
    - CardsuitDiamonds
  queries.Cardvalue:
    enum:
    - Ace
    - Two
    - Three
    - Four
    - Five
    - Six
    - Seven
    - Eight
    - Nine
    - Ten
    - Jack
    - Queen
    - King
    - Joker
    type: string
    x-enum-varnames:
    - CardvalueAce
    - CardvalueTwo
    - CardvalueThree
    - CardvalueFour
    - CardvalueFive
    - CardvalueSix
    - CardvalueSeven
    - CardvalueEight
    - CardvalueNine
    - CardvalueTen
    - CardvalueJack
    - CardvalueQueen
    - CardvalueKing
    - CardvalueJoker
  queries.Gamestate:
    enum:
    - New
    - Waiting
    - Ready
    - Determine
    - Deal
    - Discard
    - Cut
    - Play
    - PassTurn
    - Count
    - Kitty
    - Won
    - Lost
    type: string
    x-enum-varnames:
    - GamestateNew
    - GamestateWaiting
    - GamestateReady
    - GamestateDetermine
    - GamestateDeal
    - GamestateDiscard
    - GamestateCut
    - GamestatePlay
    - GamestatePassTurn
    - GamestateCount
    - GamestateKitty
    - GamestateWon
    - GamestateLost
  queries.GetCardsForMatchIdRow:
    properties:
      art:
        $ref: '#/definitions/pgtype.Text'
      cardid:
        type: integer
      currowner:
        type: integer
      cutmatchcardid:
        type: integer
      deckid:
        type: integer
      id:
        type: integer
      id_2:
        type: integer
      id_3:
        type: integer
      matchcardid:
        type: integer
      origowner:
        type: integer
      state:
        $ref: '#/definitions/queries.Cardstate'
      suit:
        $ref: '#/definitions/queries.NullCardsuit'
      value:
        $ref: '#/definitions/queries.NullCardvalue'
    type: object
  queries.Match:
    properties:
      art:
        type: string
      creationdate:
        $ref: '#/definitions/pgtype.Timestamptz'
      currentplayerturn:
        type: integer
      cutgamecardid:
        type: integer
      dealerid:
        type: integer
      deckid:
        type: integer
      elorangemax:
        type: integer
      elorangemin:
        type: integer
      gamestate:
        $ref: '#/definitions/queries.Gamestate'
      id:
        type: integer
      privatematch:
        type: boolean
      turnpasstimestamps:
        items:
          $ref: '#/definitions/pgtype.Timestamptz'
        type: array
    type: object
  queries.Matchcard:
    properties:
      cardid:
        type: integer
      currowner:
        type: integer
      id:
        type: integer
      origowner:
        type: integer
      state:
        $ref: '#/definitions/queries.Cardstate'
    type: object
  queries.NullCardsuit:
    properties:
      cardsuit:
        $ref: '#/definitions/queries.Cardsuit'
      valid:
        description: Valid is true if Cardsuit is not NULL
        type: boolean
    type: object
  queries.NullCardvalue:
    properties:
      cardvalue:
        $ref: '#/definitions/queries.Cardvalue'
      valid:
        description: Valid is true if Cardvalue is not NULL
        type: boolean
    type: object
  vo.GameCard:
    properties:
      card:
        $ref: '#/definitions/queries.Card'
      match:
        $ref: '#/definitions/queries.Matchcard'
    type: object
  vo.GameDeck:
    properties:
      cards:
        items:
          $ref: '#/definitions/vo.GameCard'
        type: array
      cutmatchcardid:
        type: integer
      id:
        type: integer
    type: object
  vo.GameMatch:
    properties:
      art:
        type: string
      creationdate:
        $ref: '#/definitions/pgtype.Timestamptz'
      currentplayerturn:
        type: integer
      cutgamecardid:
        type: integer
      dealerid:
        type: integer
      deckid:
        type: integer
      elorangemax:
        type: integer
      elorangemin:
        type: integer
      gamestate:
        $ref: '#/definitions/queries.Gamestate'
      id:
        type: integer
      players:
        items:
          $ref: '#/definitions/vo.GamePlayer'
        type: array
      privatematch:
        type: boolean
      turnpasstimestamps:
        items:
          $ref: '#/definitions/pgtype.Timestamptz'
        type: array
    type: object
  vo.GamePlayer:
    properties:
      accountid:
        type: integer
      art:
        type: string
      hand:
        items:
          $ref: '#/definitions/vo.GameCard'
        type: array
      id:
        type: integer
      isready:
        type: boolean
      kitty:
        items:
          $ref: '#/definitions/vo.GameCard'
        type: array
      play:
        items:
          $ref: '#/definitions/vo.GameCard'
        type: array
      score:
        type: integer
      turnOrder:
        type: integer
    type: object
  vo.HandModifier:
    properties:
      cardIDs:
        items:
          type: integer
        type: array
    type: object
  vo.MatchDetailsResponse:
    properties:
      gameState:
        $ref: '#/definitions/queries.Gamestate'
      matchID:
        type: integer
      playerID:
        type: integer
    type: object
host: localhost:1323
info:
  contact: {}
  description: cribbage rest server
  title: cribbage server
  version: 0.0.4
paths:
  /account/login/{accountId}:
    post:
      consumes:
      - application/json
      description: Login route for account - takes an account id and returns the account
        details
      parameters:
      - description: account id
        in: path
        name: accountId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queries.Account'
        "400":
          description: Bad Request
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      tags:
      - account
  /match/{accountId}:
    post:
      consumes:
      - application/json
      parameters:
      - description: account id
        in: path
        name: accountId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new match
      tags:
      - match
  /match/{matchId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Match ID
        in: path
        name: matchId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queries.Match'
        "404":
          description: Not Found
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Get match by id
      tags:
      - match
  /match/{matchId}/account/{accountId}:
    get:
      consumes:
      - application/json
      parameters:
      - description: match id
        in: path
        name: matchId
        required: true
        type: integer
      - description: account id
        in: path
        name: accountId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.GamePlayer'
        "404":
          description: Not Found
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Get match card by match id
      tags:
      - match
  /match/{matchId}/cards:
    get:
      consumes:
      - application/json
      parameters:
      - description: match id
        in: path
        name: matchId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/queries.GetCardsForMatchIdRow'
            type: array
        "404":
          description: Not Found
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Get match card by match id
      tags:
      - match
  /match/{matchId}/cut/{cutId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: match id
        in: path
        name: matchId
        required: true
        type: integer
      - description: cut id
        in: path
        name: cutIndex
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Cut deck by index of card selected
      tags:
      - match
  /match/{matchId}/deck/:
    get:
      consumes:
      - application/json
      description: Get vo.GameDeck by match id
      parameters:
      - description: match id
        in: path
        name: matchId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.GameDeck'
        "404":
          description: Not Found
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Get deck
      tags:
      - deck
  /match/{matchId}/join/{accountId}:
    put:
      consumes:
      - application/json
      parameters:
      - description: match id
        in: path
        name: matchId
        required: true
        type: integer
      - description: account id
        in: path
        name: accountId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/vo.MatchDetailsResponse'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Join match by id
      tags:
      - match
  /match/{matchId}/player/{fromPlayerId}/to/{toPlayerId}/kitty:
    put:
      consumes:
      - application/json
      parameters:
      - description: match id
        in: path
        name: matchId
        required: true
        type: integer
      - description: from player id
        in: path
        name: playerId
        required: true
        type: integer
      - description: to player id
        in: path
        name: toPlayerId
        required: true
        type: integer
      - description: array of ids to add to kitty
        in: body
        name: details
        required: true
        schema:
          $ref: '#/definitions/vo.HandModifier'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/queries.Match'
        "400":
          description: Bad Request
          schema: {}
        "404":
          description: Not Found
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update kitty with ids
      tags:
      - match
  /open:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/vo.GameMatch'
            type: array
        "404":
          description: Not Found
          schema: {}
        "422":
          description: Unprocessable Entity
          schema: {}
      summary: Get match by id
      tags:
      - match
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
